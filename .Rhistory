mutate(unit = case_when(unit == "I15" ~ "Index, 2015 = 100",
unit == "PCH_PRE" ~ "Meziměsíční změny v %",
TRUE ~ "Meziroční změny v %")) %>%
left_join(labels, by = c("nace_r2" = "id_eurostat")) %>%
# left_join(world_map, by = c("geo" = "iso_a2")) %>%
select(unit, geo, label, date, value) %>%
filter(unit == "Index, 2015 = 100") %>%
group_by(geo, label) %>%
filter(date == max(date)) %>%
ungroup() %>%
filter(label == "B+C+D - Průmysl celkem")
View(t)
world_map %>%
left_join(t, by = c("iso_a2" = "geo"))
a <- world_map %>%
left_join(t, by = c("iso_a2" = "geo"))
ggplotly(ggplot(a))
ggplotly(ggplot(a) %>%
geom_sf(aes(fill = value)))
ggplotly(ggplot(a)+
geom_sf(aes(fill = value)))
a <- world_map %>%
left_join(t, by = c("iso_a2" = "geo")) %>%
View()
a <- world_map %>%
left_join(t, by = c("iso_a2" = "geo")) %>%
drop_na(value)
library("tidyverse")
a <- world_map %>%
left_join(t, by = c("iso_a2" = "geo")) %>%
drop_na(value)
View(a)
a
ggplotly(ggplot(a)+
geom_sf(aes(fill = value)))
p <- ggplot(a)+
geom_sf(aes(fill = value))
p <- ggplot(a)+
geom_sf(aes(fill = value))+
geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
scale_x_continuous(limits = c(-10, 35))+
scale_y_continuous(limits = c(35, 70))+
theme_void()
p
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value))+
geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
xlim(limits = c(-10, 35))+
ylim(limits = c(35, 70))+
theme_void()
p
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value))+
geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
# xlim(limits = c(-10, 35))+
# ylim(limits = c(35, 70))+
theme_void()
p
ggplotly(p)
a <- world_map %>%
left_join(t, by = c("iso_a2" = "geo"))
p <- ggplot(a)+
geom_sf(aes(fill = value))+
geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
# xlim(limits = c(-10, 35))+
# ylim(limits = c(35, 70))+
theme_void()
p
ggplotly(p)
plot_ly(t,
color = ~value,
showlegend = F,
alpha = 1,
type = "scatter",
mode = "lines",
hoverinfo = "text")
plot_ly(a,
color = ~value,
showlegend = F,
alpha = 1,
type = "scatter",
mode = "lines",
hoverinfo = "text")
a <- world_map %>%
left_join(t, by = c("iso_a2" = "geo")) %>%
drop_na(value)
plot_ly(a,
color = ~value,
showlegend = F,
alpha = 1,
type = "scatter",
mode = "lines",
hoverinfo = "text")
canada <- ne_states(country = "Canada", returnclass = "sf")
world <- ne_countries(returnclass = "sf")
class(world)
#> [1] "sf"    "data.frame"
plot_ly(world, color = I("gray90"), stroke = I("black"), span = I(1))
plot_ly(a,
color = ~value,
# showlegend = F,
alpha = 1,
# type = "scatter",
# mode = "lines",
hoverinfo = "text")
# type = "scatter",
# mode = "lines",)
class(a)
world <- ne_countries(returnclass = "sf",continent = "europe")
europe <- ne_countries(returnclass = "sf",continent = "europe")
class(europe)
View(europe)
#> [1] "sf"    "data.frame"
plot_ly(europe, color = I("gray90"), stroke = I("black"), span = I(1))
#> [1] "sf"    "data.frame"
plot_ly(europe, color = I("gray90"), stroke = I("black"), span = I(1), type = "scatter")
a <- europe %>%
left_join(t, by = c("iso_a2" = "geo")) %>%
drop_na(value)
p <- ggplot(a)+
geom_sf(aes(fill = value))+
geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
# xlim(limits = c(-10, 35))+
# ylim(limits = c(35, 70))+
theme_void()
p
ggplotly(p)
View(t)
a <- europe %>%
left_join(t, by = c("iso_a2" = "geo")) %>%
# drop_na(value) %>%
identity()
p <- ggplot(a)+
geom_sf(aes(fill = value))+
geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
# xlim(limits = c(-10, 35))+
# ylim(limits = c(35, 70))+
theme_void()
p
p <- ggplot(a)+
geom_sf(aes(fill = value))+
geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
xlim(limits = c(-10, 35))+
ylim(limits = c(35, 70))+
theme_void()
p
ggplotly(p)
View(europe)
a <- europe %>%
left_join(t, by = c("iso_a2_eh" = "geo")) %>%
# drop_na(value) %>%
identity()
p <- ggplot(a)+
geom_sf(aes(fill = value))+
geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
xlim(limits = c(-10, 35))+
ylim(limits = c(35, 70))+
theme_void()
p
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
xlim(limits = c(-10, 35))+
ylim(limits = c(35, 70))+
theme_void()
p
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
xlim(limits = c(-10, 35))+
ylim(limits = c(35, 70))+
theme_void()
p
ggplotly(p)
p
ggplotly(p)
p
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
xlim(limits = c(-10, 35))+
ylim(limits = c(35, 70))+
theme_minimal()
p
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
xlim(limits = c(-10, 35))+
ylim(limits = c(35, 70))+
theme_minimal()+
xlab("")+
ylab("")
p
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
coord_sf(expand = FALSE,
xlim = c(-10,35),
ylim = c(35,70))+
theme_minimal()
p
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
coord_sf(expand = FALSE,
xlim = c(-10,35),
ylim = c(35,70))+
theme_bw()
p
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
coord_sf(expand = FALSE,
xlim = c(-10,35),
ylim = c(35,70))+
theme_classic()
p
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
coord_sf(expand = FALSE,
xlim = c(-10,35),
ylim = c(35,70))+
theme_light()
p
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
coord_sf(expand = FALSE,
xlim = c(-10,35),
ylim = c(35,70))+
theme_void(base_line_size = 0,base_rect_size = 0)
p
ggplotly(p)
plot_ly(a,
color = ~value,
alpha = 1,
hoverinfo = "text")
plot_ly(a,
color = ~value,
alpha = 1,
hoverinfo = "text",size = I(30))
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
coord_sf(expand = FALSE,
xlim = c(-10,35),
ylim = c(35,70))+
# theme_void()
theme_minimal()
p
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value))+
geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
# xlim(limits = c(-10, 35))+
# ylim(limits = c(35, 70))+
theme_void()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())
p
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
coord_sf(expand = FALSE,
xlim = c(-10,35),
ylim = c(35,70))+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())
p
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", date, value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
coord_sf(expand = FALSE,
xlim = c(-10,35),
ylim = c(35,70))+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())
ggplotly(p)
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", date, value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
coord_sf(expand = FALSE,
xlim = c(0,35),
ylim = c(35,70))+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())
p
p <- ggplot(a)+
geom_sf(aes(fill = value, text = paste0("hon ", date, value)))+
# geom_sf_text(aes(label = paste0("",formatC(value, big.mark=' ',decimal.mark = ",", format = 'f',digits = 2))))+
coord_sf(expand = FALSE,
xlim = c(-20,35),
ylim = c(35,70))+
theme_minimal()+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank())
p
ggplotly(p)
shiny::runApp()
View(pr_p)
pr_p <- readRDS("pr_p.rds")
View(pr_p)
max(pr_p_eurostat$date)
View(pr_p_eurostat)
colnames(pr_p_eurostat)
pr_p_eurostat$date
max(pr_p_eurostat$date, na.rm = T)
## 3. body --------------------------------
body <- dashboardBody(
## 3.0. CSS styles in header ----------------------------
tags$script(HTML("
var openTab = function(tabName){
$('a', $('.sidebar')).each(function() {
if(this.getAttribute('data-value') == tabName) {
this.click()
};
});
}
")),
tags$head(
# ## JS codes
tags$script(src="js/index.js"),
# tags$script(src = "fixedElement.js" ),
# tags$style(HTML(".scroller_anchor{height:0px; margin:0; padding:0;};
#                  .scroller{background: white;
#                   border: 1px solid #CCC;
#                   margin:0 0 10px;
#                   z-index:100;
#                   height:50px;
#                   font-size:18px;
#                   font-weight:bold;
#                   text-align:center;
#                  width:500px;}")),
#tags$script(src = "world.js" ),
# tags$script("document.title = 'Česká národní banka - analytický dashboard'"),
### Styles
tags$style(HTML(".small-box {height: 65px}")),
tags$style(HTML(".tab-content { padding-left: 25px; padding-right: 30px; font-size: 15px; font-family: Arial;}")) ,
tags$style(HTML("hr {border-top: 1px solid #000000;}")),
tags$style(HTML("h1 {padding-left: 0px; padding-right: 30px; color: #2426A8; font-weight: bold;}")),
tags$style(HTML("ol {padding-left: 15px; padding-right: 30px; color: #000000; font-family: Arial;}")),
# tags$style(HTML("brsmall {margin-bottom: 0em; display: block;}")),
# tags$style(HTML("div {padding-left: 15px; padding-right: 30px; }")),
# tags$style(HTML(".fa { font-size: 20px; }")),
# tags$style(HTML(".glyphicon { font-size: 20px; }")),  ## use glyphicon package
# tags$style(HTML(".fa-dashboard { font-size: 2px; padding-left: 20px}")),
# # tags$style(HTML(".glyphicon-euro { font-size: 15px; }")),
# tags$style(HTML(".fa-globe { font-size: 20px; }")),
# tags$style(HTML(".fa-barcode { font-size: 20px; }")),
# tags$style(HTML(".fa-wrench { font-size: 15px; }")),
# tags$style(HTML(".fa-refresh { font-size: 15px; }")),
# tags$style(HTML(".fa-search { font-size: 15px; }")),
# tags$style(HTML(".fa-comment { font-size: 20px; }")),
# tags$style(HTML(".fa-share-alt { font-size: 20px; }")),
# tags$style(HTML(".fa-envelope { font-size: 20px; }")),
# tags$style(HTML(".fa-question-circle { font-size: 20px; }")),
# tags$style(HTML(".fa-chevron-circle-down { font-size: 15px; }")),
# tags$style(HTML(".fa-bell { font-size: 17px; }")),
# tags$style(HTML(".fa-check { font-size: 14px; }")),
# tags$style(HTML(".fa-times { font-size: 14px; }")),
# tags$style(HTML(".fa-user-helmet-safety { font-size: 14px; }")),
#
#tags$style(HTML(".fa-twitter { font-size: 10px; color:red;}")),
#tags$style(HTML(".fa-facebook { font-size: 10px; color:red;}")),
#tags$style(HTML(".fa-google-plus { font-size: 10px; color:red;}")),
#tags$style(HTML(".fa-pinterest-p { font-size: 10px; color:red;}")),
#tags$style(HTML(".fa-linkedin { font-size: 10px; color:red;}")),
#tags$style(HTML(".fa-tumblr { font-size: 10px; color:red;}")),
# color of background original #ECF0F5
# other dashboard skin colors
# https://stackoverflow.com/questions/41284845/change-sidebar-menu-item-color-in-r-shiny
## modify the dashboard's skin color
tags$style(HTML('
/* logo */
.skin-blue .main-header .logo {
background-color: #FFFFFF;
color:#2426A8;
# color:#2426A8;
font-size: 22px;
}
/* logo when hovered */
.skin-blue .main-header .logo:hover {
background-color: #FFFFFF;
}
/* navbar (rest of the header) */
.skin-blue .main-header .navbar {
background-color: #2426A8;
}
/* main sidebar */
.skin-blue .main-sidebar {
background-color: #2426A8;
}
/* active selected tab in the sidebarmenu */
.skin-blue .main-sidebar .sidebar .sidebar-menu .active a{
background-color: #000000;
}
/* other links in the sidebarmenu */
.skin-blue .main-sidebar .sidebar .sidebar-menu a{
background-color: #2426A8;
}
# /* other links in the sidebarmenu when hovered */
#  .skin-blue .main-sidebar .sidebar .sidebar-menu a:hover{
#  background-color: rgb(232,245,251);
#  color: rgb(0,144,197);font-weight: bold;
#  }
/* body */
.content-wrapper, .right-side {
background-color: #FFFFFF;
}
')
runApp()
runApp()
unique(pr$label)
unique(pr$trans)
unique(pr_p_eurostat$trans)
unique(pr_p_eurostat$unit)
library("Tbox")
library("tbox.datadl")
library("dplyr")
library("rnaturalearth")
library("rnaturalearthdata")
library("readxl")
library("ggplot2")
library("sf")
library("plotly")
library("tidyverse")
# download data -----------------------------------------------------------
flowref <- "sts_inpr_m"
eurostat_bulk_download(flowref, folder = "data")
df <- eurostat_bulk_load(paste0(flowref, ".tsv.gz"), folder = "data")
labels <- read_xlsx("labels.xlsx")
europe <- ne_countries(returnclass = "sf",continent = "europe")
t <- df %>%
filter(nace_r2 %in% labels$id_eurostat & s_adj %in% c("SCA") & !(unit %in% c("I10"))) %>%
mutate(unit = case_when(unit == "I15" ~ "Index",
unit == "PCH_PRE" ~ "Meziměsíční změny",
TRUE ~ "Meziroční změny")) %>%
left_join(labels, by = c("nace_r2" = "id_eurostat"))
head(t)
unique(df$unit)
t <- df %>%
filter(nace_r2 %in% labels$id_eurostat & s_adj %in% c("SCA") & !(unit %in% c("I10"))) %>%
mutate(unit = case_when(unit == "I15" ~ "Index",
unit == "PCH_PRE" ~ "Meziměsíční změny",
unit == "PCH_SM" ~ "Meziroční změny",
TRUE ~ "del")) %>%
filter(unit != "del") %>%
left_join(labels, by = c("nace_r2" = "id_eurostat"))
europe %>%
left_join(t, by = c("iso_a2_eh" = "geo")) %>%
saveRDS("pr_p_eurostat.rds")
runApp()
unique(t$date)
unique(t$unit)
t <- df %>%
filter(nace_r2 %in% labels$id_eurostat & s_adj %in% c("SCA") & !(unit %in% c("I10"))) %>%
mutate(unit = case_when(unit == "I15" ~ "Index",
unit == "PCH_PRE" ~ "Meziměsíční změny",
unit == "PCH_SM" ~ "Meziroční změny",
TRUE ~ "del")) %>%
filter(unit != "del") %>%
left_join(labels, by = c("nace_r2" = "id_eurostat"))
unique(t$unit)
df %>%
filter(nace_r2 %in% labels$id_eurostat & s_adj %in% c("SCA") & !(unit %in% c("I10")))
t <- df %>%
filter(nace_r2 %in% labels$id_eurostat & s_adj %in% c("SCA") & !(unit %in% c("I10")))
unique(t$unit)
runApp()
library("Tbox")
library("tbox.datadl")
library("dplyr")
library("rnaturalearth")
library("rnaturalearthdata")
library("readxl")
library("ggplot2")
library("sf")
library("plotly")
library("tidyverse")
# download data -----------------------------------------------------------
flowref <- "sts_inpr_m"
eurostat_bulk_download(flowref, folder = "data")
df <- eurostat_bulk_load(paste0(flowref, ".tsv.gz"), folder = "data")
labels <- read_xlsx("labels.xlsx")
europe <- ne_countries(returnclass = "sf",continent = "europe")
t <- df %>%
filter(nace_r2 %in% labels$id_eurostat & s_adj %in% c("SCA") & !(unit %in% c("I10"))) %>%
mutate(unit = case_when(unit == "I15" ~ "Index",
unit == "PCH_PRE" ~ "Meziměsíční změny",
# unit == "PCH_SM" ~ "Meziroční změny",
TRUE ~ "del")) %>%
filter(unit != "del") %>%
left_join(labels, by = c("nace_r2" = "id_eurostat"))
europe %>%
left_join(t, by = c("iso_a2_eh" = "geo")) %>%
saveRDS("pr_p_eurostat.rds")
View(pr_p_eurostat)
runApp()
shiny::runApp()
